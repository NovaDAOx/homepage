(self.webpackChunkrugs=self.webpackChunkrugs||[]).push([[310],{43310:function(e,n,t){"use strict";t.r(n),t.d(n,{WalletConnectV1Adapter:function(){return p}});var o=t(21611),r=t(5587),i=t(99363),c=t(24180),a=class extends i.Z{constructor(e,n){super({cryptoLib:c,connectorOpts:e,pushServerOpts:n})}},s=t(981),d=t(80956),l=t(50520);const u=[{name:"Rainbow",chains:[s.EN.EIP155],logo:"https://images.web3auth.io/login-rainbow.svg",mobile:{native:"rainbow:",universal:"https://rnbwapp.com"},desktop:{native:"",universal:""}},{name:"MetaMask",chains:[s.EN.EIP155],logo:"https://images.web3auth.io/login-metamask.svg",mobile:{native:"metamask:",universal:"https://metamask.app.link"},desktop:{native:"",universal:""}}];function h(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,o)}return t}class p extends d.d{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,r.Z)(this,"name",s.rW.WALLET_CONNECT_V1),(0,r.Z)(this,"adapterNamespace",s.yk.EIP155),(0,r.Z)(this,"currentChainNamespace",s.EN.EIP155),(0,r.Z)(this,"type",s.hN.EXTERNAL),(0,r.Z)(this,"adapterOptions",void 0),(0,r.Z)(this,"status",s.MP.NOT_READY),(0,r.Z)(this,"adapterData",{uri:"",extensionAdapters:u}),(0,r.Z)(this,"connector",null),(0,r.Z)(this,"wcProvider",null),(0,r.Z)(this,"rehydrated",!1),this.adapterOptions=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?h(Object(t),!0).forEach(function(n){(0,r.Z)(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):h(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}({},e),this.chainConfig=e.chainConfig||null,this.sessionTime=e.sessionTime||86400}get connected(){var e;return!(null===(e=this.connector)||void 0===e||!e.connected)}get provider(){var e;return(null===(e=this.wcProvider)||void 0===e?void 0:e.provider)||null}set provider(e){throw new Error("Not implemented")}init(){var e=()=>super.checkInitializationRequirements,n=this;return(0,o.Z)(function*(){e().call(n),n.chainConfig||(n.chainConfig=(0,s.h2)(s.EN.EIP155,1)),n.connector=n.getWalletConnectInstance(),n.wcProvider=new l.WalletConnectProvider({config:{chainConfig:n.chainConfig},connector:n.connector}),n.emit(s.n2.READY,s.rW.WALLET_CONNECT_V1),n.status=s.MP.READY,s.cM.debug("initializing wallet connect v1 adapter"),n.connector.connected&&(n.rehydrated=!0,yield n.onConnectHandler({accounts:n.connector.accounts,chainId:n.connector.chainId}))})()}connect(){var e=()=>super.checkConnectionRequirements,n=this;return(0,o.Z)(function*(){if(e().call(n),!n.connector)throw s.Ty.notReady("Wallet adapter is not ready yet");return n.connected?(yield n.onConnectHandler({accounts:n.connector.accounts,chainId:n.connector.chainId}),n.provider):(n.status!==s.MP.CONNECTING&&(null!==(t=n.adapterOptions.adapterSettings)&&void 0!==t&&t.qrcodeModal&&(n.connector=n.getWalletConnectInstance(),n.wcProvider=new l.WalletConnectProvider({config:{chainConfig:n.chainConfig,skipLookupNetwork:null===(r=n.adapterOptions.adapterSettings)||void 0===r?void 0:r.skipNetworkSwitching},connector:n.connector})),yield n.createNewSession(),n.status=s.MP.CONNECTING,n.emit(s.n2.CONNECTING,{adapter:s.rW.WALLET_CONNECT_V1})),new Promise((e,t)=>{if(!n.connector)return t(s.Ty.notReady("Wallet adapter is not ready yet"));n.connector.on("modal_closed",(0,o.Z)(function*(){return n.status=s.MP.READY,n.emit(s.n2.READY,s.rW.WALLET_CONNECT_V1),t(new Error("User closed modal"))}));try{n.connector.on("connect",function(){var t=(0,o.Z)(function*(t,o){return t&&n.emit(s.n2.ERRORED,t),s.cM.debug("connected event emitted by web3auth"),yield n.onConnectHandler(o.params[0]),e(n.provider)});return function(e,n){return t.apply(this,arguments)}}())}catch(r){s.cM.error("Wallet connect v1 adapter error while connecting",r),n.status=s.MP.READY,n.rehydrated=!0,n.emit(s.n2.ERRORED,r),t(r instanceof s.up?r:s.RM.connectionError("Failed to login with wallet connect: ".concat((null==r?void 0:r.message)||"")))}}));var t,r})()}setAdapterSettings(e){this.status!==s.MP.READY&&null!=e&&e.sessionTime&&(this.sessionTime=e.sessionTime)}getUserInfo(){var e=this;return(0,o.Z)(function*(){if(!e.connected)throw s.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}})()}disconnect(){var e=arguments,n=()=>super.disconnect,t=this;return(0,o.Z)(function*(){let o=e.length>0&&void 0!==e[0]?e[0]:{cleanup:!1};const{cleanup:r}=o;if(!t.connector||!t.connected)throw s.RM.notConnectedError("Not connected with wallet");yield n().call(t),yield t.connector.killSession(),t.rehydrated=!1,r?(t.connector=null,t.status=s.MP.NOT_READY,t.wcProvider=null):t.status=s.MP.READY,t.emit(s.n2.DISCONNECTED)})()}addChain(e){var n=this;return(0,o.Z)(function*(){try{var t;if(!n.wcProvider)throw s.Ty.notReady("Wallet adapter is not ready yet");const o=null===(t=n.adapterOptions.adapterSettings)||void 0===t?void 0:t.networkSwitchModal;o&&(yield o.addNetwork({chainConfig:e,appOrigin:window.location.hostname})),yield n.wcProvider.addChain(e)}catch(o){s.cM.error(o)}})()}switchChain(e,n){var t=this;return(0,o.Z)(function*(){var o;if(!t.wcProvider)throw s.Ty.notReady("Wallet adapter is not ready yet");const r=null===(o=t.adapterOptions.adapterSettings)||void 0===o?void 0:o.networkSwitchModal;r&&(yield r.switchNetwork({currentChainConfig:n,newChainConfig:e,appOrigin:window.location.hostname})),yield t.wcProvider.switchChain({chainId:n.chainId,lookup:!1,addChain:!1})})()}createNewSession(){var e=arguments,n=this;return(0,o.Z)(function*(){var t,r;let i=e.length>0&&void 0!==e[0]?e[0]:{forceNewSession:!1};if(!n.connector)throw s.Ty.notReady("Wallet adapter is not ready yet");if(i.forceNewSession&&n.connector.pending&&(yield n.connector.killSession()),null===(t=n.adapterOptions)||void 0===t||null===(r=t.adapterSettings)||void 0===r||!r.qrcodeModal)return new Promise((e,t)=>{var r;if(!n.connector)return t(s.Ty.notReady("Wallet adapter is not ready yet"));s.cM.debug("creating new session for web3auth wallet connect"),n.connector.on("display_uri",function(){var r=(0,o.Z)(function*(o,r){var i;return o?(n.emit(s.n2.ERRORED,s.RM.connectionError("Failed to display wallet connect qr code")),t(o)):(n.updateAdapterData({uri:r.params[0],extensionAdapters:u}),null===(i=n.connector)||void 0===i||i.off("display_uri"),e())});return function(e,n){return r.apply(this,arguments)}}()),n.connector.createSession({chainId:parseInt((null===(r=n.chainConfig)||void 0===r?void 0:r.chainId)||"0x1",16)}).catch(e=>(s.cM.error("error while creating new wallet connect session",e),n.emit(s.n2.ERRORED,e),t(e)))});var c;yield n.connector.createSession({chainId:parseInt((null===(c=n.chainConfig)||void 0===c?void 0:c.chainId)||"0x1",16)})})()}onConnectHandler(e){var n=this;return(0,o.Z)(function*(){if(!n.connector||!n.wcProvider)throw s.Ty.notReady("Wallet adapter is not ready yet");if(!n.chainConfig)throw s.Ty.invalidParams("Chain config is not set");const{chainId:t}=e;if(s.cM.debug("connected chainId in hex"),t!==parseInt(n.chainConfig.chainId,16)){var o,r,i;const e=(0,s.h2)(s.EN.EIP155,t)||{chainId:"0x".concat(t.toString(16)),displayName:"Unknown Network"},a=null===(o=n.adapterOptions.adapterSettings)||void 0===o?void 0:o.qrcodeModal;if(!a||a&&(null===(r=n.adapterOptions)||void 0===r||null===(i=r.adapterSettings)||void 0===i||!i.skipNetworkSwitching))try{yield n.addChain(n.chainConfig),yield n.switchChain(e,n.chainConfig),n.connector=n.getWalletConnectInstance()}catch(c){return s.cM.error("error while chain switching",c),yield n.createNewSession({forceNewSession:!0}),n.emit(s.n2.ERRORED,s.Ty.fromCode(5e3,"Not connected to correct network. Expected: ".concat(n.chainConfig.displayName,", Current: ").concat((null==e?void 0:e.displayName)||t,", Please switch to correct network from wallet"))),n.status=s.MP.READY,void(n.rehydrated=!0)}}yield n.wcProvider.setupProvider(n.connector),n.subscribeEvents(n.connector),n.status=s.MP.CONNECTED,n.emit(s.n2.CONNECTED,{adapter:s.rW.WALLET_CONNECT_V1,reconnected:n.rehydrated})})()}subscribeEvents(e){var n=this;e.on("session_update",function(){var e=(0,o.Z)(function*(e){e&&n.emit(s.n2.ERRORED,e)});return function(n){return e.apply(this,arguments)}}())}getWalletConnectInstance(){const e=this.adapterOptions.adapterSettings||{};return e.bridge=e.bridge||"https://bridge.walletconnect.org",new a(e)}}}}]);