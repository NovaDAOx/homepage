(self.webpackChunkrugs=self.webpackChunkrugs||[]).push([[847],{43847:function(e,t,r){"use strict";r.r(t),r.d(t,{MetamaskAdapter:function(){return d}});var n=r(21611),i=r(5587),a=r(83917),s=r.n(a),o=r(981),c=r(80956);class d extends c.d{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,i.Z)(this,"adapterNamespace",o.yk.EIP155),(0,i.Z)(this,"currentChainNamespace",o.EN.EIP155),(0,i.Z)(this,"type",o.hN.EXTERNAL),(0,i.Z)(this,"name",o.rW.METAMASK),(0,i.Z)(this,"status",o.MP.NOT_READY),(0,i.Z)(this,"rehydrated",!1),(0,i.Z)(this,"metamaskProvider",null),this.chainConfig=e.chainConfig||null,this.sessionTime=e.sessionTime||86400}get provider(){return this.status===o.MP.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(e){throw new Error("Not implemented")}init(e){var t=()=>super.checkInitializationRequirements,r=this;return(0,n.Z)(function*(){if(t().call(r),r.metamaskProvider=yield s()({mustBeMetaMask:!0}),!r.metamaskProvider)throw o.Ty.notInstalled("Metamask extension is not installed");r.status=o.MP.READY,r.emit(o.n2.READY,o.rW.METAMASK);try{o.cM.debug("initializing metamask adapter"),e.autoConnect&&(r.rehydrated=!0,yield r.connect())}catch(n){r.emit(o.n2.ERRORED,n)}})()}setAdapterSettings(e){this.status!==o.MP.READY&&null!=e&&e.sessionTime&&(this.sessionTime=e.sessionTime)}connect(){var e=()=>super.checkConnectionRequirements,t=this;return(0,n.Z)(function*(){if(e().call(t),t.chainConfig||(t.chainConfig=(0,o.h2)(o.EN.EIP155,1)),t.status=o.MP.CONNECTING,t.emit(o.n2.CONNECTING,{adapter:o.rW.METAMASK}),!t.metamaskProvider)throw o.RM.notConnectedError("Not able to connect with metamask");try{yield t.metamaskProvider.request({method:"eth_requestAccounts"});const{chainId:e}=t.metamaskProvider;if(e!==t.chainConfig.chainId&&(yield t.switchChain(t.chainConfig)),t.status=o.MP.CONNECTED,!t.provider)throw o.RM.notConnectedError("Failed to connect with provider");return t.provider.once("disconnect",()=>{t.disconnect()}),t.emit(o.n2.CONNECTED,{adapter:o.rW.METAMASK,reconnected:t.rehydrated}),t.provider}catch(r){throw t.status=o.MP.READY,t.rehydrated=!1,t.emit(o.n2.ERRORED,r),o.RM.connectionError("Failed to login with metamask wallet")}})()}disconnect(){var e=arguments,t=()=>super.disconnect,r=this;return(0,n.Z)(function*(){var n;let i=e.length>0&&void 0!==e[0]?e[0]:{cleanup:!1};yield t().call(r),null===(n=r.provider)||void 0===n||n.removeAllListeners(),i.cleanup?(r.status=o.MP.NOT_READY,r.metamaskProvider=null):r.status=o.MP.READY,r.rehydrated=!1,r.emit(o.n2.DISCONNECTED)})()}getUserInfo(){var e=this;return(0,n.Z)(function*(){if(e.status!==o.MP.CONNECTED)throw o.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}})()}switchChain(e){var t=this;return(0,n.Z)(function*(){if(!t.metamaskProvider)throw o.RM.notConnectedError("Not connected with wallet");try{yield t.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:e.chainId}]})}catch(r){if(4902!==r.code)throw r;yield t.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:e.chainId,chainName:e.displayName,rpcUrls:[e.rpcTarget]}]})}})()}}}}]);